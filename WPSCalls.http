
## This http request file can be run using intellij, but is also fairly self-explaining

## CASE 1: Deploy Process, run for single file
###

###
# I had to implement deploy as a separate call, outside of pywps, so I can dynamically reload my list of available processes in the wps
GET http://localhost:5000/deploy

###
# This call shows how a deploy through WPS-execute could look like
POST http://localhost:5000/wps
Content-Type: application/xml

< ./resources/executeDeploy.xml
###

# After the call to /deploy, a new processed named 'newprocess' becomes available. (Currently hard-coded for the hackathon)
GET http://localhost:5000/wps?service=WPS&request=DescribeProcess&version=1.0.0&identifier=newprocess
Accepts: application/xml

###

# Now Execute our new process.
# The current implementation simply ignores the query string, and executes on one file

POST http://localhost:5000/wps
Content-Type: application/xml

< ./resources/executeDeployedProcess.xml

###

## CASE 2: Generic docker run

# In this approach, the WPS provides a generic 'DockerProcessFiles' process. Which allows a user to run an arbitrary command
# inside a docker container.

# 1. Do describe process

GET http://localhost:5000/wps?service=WPS&request=DescribeProcess&version=1.0.0&identifier=DockerProcessFiles
Accepts: application/xml

###
# 2. Execute process


POST http://localhost:5000/wps
Content-Type: application/xml

< ./resources/executeDocker.xml
